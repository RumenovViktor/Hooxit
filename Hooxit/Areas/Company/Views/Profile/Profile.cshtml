@using Hooxit.Presentation.Implemenation.Company.Read
@model ProfileInfoRead

<div class="top">
    <div class="row">
        <div class="col-md-3">
            <div class="card">
                <div class="card-block">
                    <div class="image-container">
                        @if (string.IsNullOrWhiteSpace(Model.Picture))
                        {
                            <img class="img-fluid" src="~/images/company-avatar.png" />
                        }
                        else
                        {
                            <img class="img-fluid" src="@Model.Picture" />
                        }
                    </div>
                    @Html.Partial("_UploadPicture")
                </div>
            </div>
            <ul class="list-group top">
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <a href="@Url.Action("All", "Positions", new { companyId = User.Identity.Name })">Positions</a>
                    <span class="badge badge-primary badge-pill">@Model.CreatedPositions</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <a href="@Url.Action("AllInterested", "Profile")">Interested in</a>
                    <span class="badge badge-primary badge-pill">@Model.InterestedInCount</span>
                </li>
                <li class="list-group-item d-flex justify-content-between align-items-center">
                    <a>Subscriptions</a>
                    <span class="badge badge-primary badge-pill">0</span>
                </li>
            </ul>
        </div>
        <div class="col-md-8">
            <div class="card">
                <div class="card-block">
                    <div id="descriptionContainer" class="card-text">
                        @if (!string.IsNullOrWhiteSpace(Model.CompanyDescription))
                        {
                            <div class="updateIcons">
                                <a href="#" class="update pull-right"><i class="fa fa-pencil" aria-hidden="true"></i></a>
                                <a href="#" class="closeIcon pull-right"><i class="fa fa-close" aria-hidden="true"></i></a>
                                <a href="#" class="save pull-right" data-toggle="modal" data-target="#companyDescriptionModal"><i class="fa fa-check-square-o" aria-hidden="true"></i></a>
                            </div>
                            <h3 class="flex-center">About Us</h3>
                            <br />

                            <div class="companyDescriptionPresentation text-left">

                            </div>

                            @Html.HiddenFor(x => x.CompanyDescription, new { id = "companyDescriptionHidden" })
                        }
                        else
                        {
                            <div class="updateIcons">
                                <a href="#" class="update pull-right"><i class="fa fa-pencil" aria-hidden="true"></i></a>
                                <a href="#" class="closeIcon pull-right"><i class="fa fa-close" aria-hidden="true"></i></a>
                                <a href="#" class="save pull-right" data-toggle="modal" data-target="#companyDescriptionModal"><i class="fa fa-check-square-o" aria-hidden="true"></i></a>
                            </div>
                            <h3 class="flex-center">About Us</h3>
                            <br />

                            <div class="descriptionReminder">
                                <p>
                                    Looks like you haven't added description of your company.
                                </p>
                                <a href="#" class="btn btn-unique descriptionUpdateBtn">Add description</a>
                            </div>
                        }
                        <div id="companyDescriptionEditor">

                        </div>
                    </div>
                </div>
            </div>
            @Html.Partial("../Profile/_CompanyProducts", Model.Products)
            @Html.Partial("../Profile/_CreateProduct", new Hooxit.Presentation.Implementation.Company.Write.ProductWriteModel())
        </div>
    </div>

    <div class="modal fade" id="companyDescriptionModal" tabindex="-1" role="dialog" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Save changes?</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">Are you sure you want to save the changes?</div>
                <div class="modal-footer">
                    <button type="button" id="doSaveDescription" class="btn btn-success" data-dismiss="modal">Yes</button>
                    <button type="button" class="btn btn-outline-danger" data-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section CompanyProfileScripts {
    <script src="~/js/base/TextEditor.js"></script>
    <script src="~/js/company/companyDescriptionManager.js"></script>
    <script src="~/js/company/productsManager.js"></script>
    <script>
        $('#file-upload').on('change', function (e) {
            $('#uploadPicture').submit();
        });
    </script>
}
