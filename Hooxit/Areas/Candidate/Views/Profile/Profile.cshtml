@using Hooxit.Presentation.Implemenation.Candidate.Read
@model ProfileReadModel

<div class="top">
    <div class="row">
        <div class="col-lg-3">
            <div class="card">
                @*<img class="img-fluid" src="https://mdbootstrap.com/img/Photos/Horizontal/Nature/4-col/img%20%282%29.jpg" alt="Card image cap">*@

                <div class="image-container">
                    <form method="post" enctype="multipart/form-data" asp-controller="Profile" asp-action="ChangePicture">
                        <button class="btn-info rounded-button">
                            <i class="fa fa-pencil"></i>
                        </button>
                    </form>
                    <img class="img-fluid" src="~/images/default-avatar.png" />
                </div>
                <div class="card-block">
                    <h4 class="card-title">@Model.FullName</h4>
                    <br />
                    <div class="card-text">
                        <div class="row">
                            <div class="col-1">
                                <a href="#"></a><i class="fa fa-briefcase" aria-hidden="true"></i>
                            </div>
                            <div class="col-lg-9">
                                <p class="userInfodisplayValue positionForUpdate">
                                    @Model.Position
                                </p>
                                <div class="userInfoEditFieldWrapper toggle-update-edit">
                                    <input class="userInfoForUpdate positionForUpdateInput" type="text" value="@Model.Position" />
                                </div>
                                <span class="requestType">position</span>
                            </div>
                            <div class="col-lg-1 navbar-toggler-right">
                                <a href="#" class="toggle-update"><i class="fa fa-pencil" aria-hidden="true"></i></a>
                            </div>
                        </div>
                    </div>
                    <div class="card-text">
                        <div class="row">
                            <div class="col-1">
                                <a href="#"></a><i class="fa fa-globe" aria-hidden="true"></i>
                            </div>
                            <div class="col-lg-9 positionUserInfoWrapper">
                                <p class="userInfodisplayValue">@Model.Country</p>
                                <div class="userInfoEditFieldWrapper toggle-update-edit">
                                    <input class="userInfoForUpdate" type="text" value="@Model.Country" />
                                    @Component.InvokeAsync(nameof(Hooxit.Components.Countries)).Result
                                </div>
                                <span class="requestType">country</span>
                            </div>
                            <div class="col-lg-1 navbar-toggler-right">
                                <a href="#" class="toggle-update"><i class="fa fa-pencil" aria-hidden="true"></i></a>
                            </div>
                        </div>
                    </div>
                    <div class="card-text">
                        <div class="row">
                            <div class="col-1">
                                <a href="#"></a><i class="fa fa-link" aria-hidden="true"></i>
                            </div>
                            <div class="col-lg-9">
                                <p class="userInfodisplayValue">
                                    @Model.Email
                                </p>
                                <div class="userInfoEditFieldWrapper toggle-update-edit">
                                    <input class="userInfoForUpdate" type="email" value="@Model.Email" />
                                </div>
                                <span class="requestType">email</span>
                            </div>
                            <div class="col-lg-1 navbar-toggler-right">
                                <a href="#" class="toggle-update"><i class="fa fa-pencil" aria-hidden="true"></i></a>
                            </div>
                        </div>
                    </div>
                    <div id="userInfo_antiforgery_token">@Html.AntiForgeryToken()</div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="row">
                <div class="card card-block">
                    <h4 class="card-title">Experience <a href="#" class="addExperience"><i class="fa fa-plus navbar-toggler-right" aria-hidden="true"></i></a></h4>
                    @Html.Partial("../Experience/_AddExperiencePartial", new Hooxit.Presentation.Implemenation.Candidate.Write.ExperienceWriteModel())
                    <hr />
                    <div id="experienceContainer">

                    </div>
                    @Html.Partial("../Experience/_ExperiencePartial.cshtml", Model.Experience)
                </div>
            </div>
            <div class="row top">
                <div class="card col-lg-12">
                    <div class="card-block">
                        <h4 class="card-title">
                            Skills

                            <a href="#" class="updateSkills pull-right"><i class="fa fa-pencil" aria-hidden="true"></i></a>
                            <a href="#" class="skillsCloseUpdate pull-right"><i class="fa fa-close" aria-hidden="true"></i></a>
                            <a href="#" class="saveSkills pull-right"><i class="fa fa-check-square-o" aria-hidden="true"></i></a>
                        </h4>
                        <hr class="my-2" />
                        @if (!Model.Skills.Any())
                        {
                            <div class="text-center noSkillsContainer">
                                <p>You haven't added any skills yet.</p>
                                <a class="btn btn-unique candidateAddSkillBtn">Add Skills</a>
                            </div>
                        }
                        else
                        {
                            <div class="skillsContainer skillsPresentationContainer">
                                @foreach (var skill in Model.Skills)
                                {
                                    <label class="badge badge-info selectedSkill" value="@skill.ID">@skill.Name</label>
                                }
                            </div>
                        }
                        <div class="skillsPanel">
                            <div class="card">
                                <div class="card-block">
                                    <div class="input-group md-form">
                                        <input type="text" id="searchSkill" />
                                        <label for="searchSkill">Search</label>
                                    </div>
                                    <div class="list-group skillsList">
                                    </div>
                                </div>
                            </div>
                            <div class="card top">
                                <div class="card-block">
                                    <h4 class="card-title">Skills</h4>
                                    <div class="skillsContainer">
                                        @if (Model.Skills.Any())
                                        {
                                            foreach (var skill in Model.Skills)
                                            {
                                                <label class="badge badge-info selectedSkill" value="@skill.ID">@skill.Name<a class="fa fa-remove"></a></label>
                                            }
                                        }
                                        else
                                        {
                                            <p class="noSkillsText">No skills selected...</p>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-3">
            <div class="card text-center">
                <div class="card-block">
                    <h4 class="card-title"><i class="fa fa-info-circle" aria-hidden="true"></i></h4>
                    <p class="card-text">Adding experience will make it easier to match with jobs positions.</p>
                    <a class="btn btn-default addExperience">Add experience</a>
                </div>
            </div>
            <div class="card text-center top">
                <div class="card-block">
                    <h4 class="card-title"><i class="fa fa-info-circle" aria-hidden="true"></i></h4>
                    <p class="card-text">Adding skills will make it easier to match with jobs positions.</p>
                    <a class="btn btn-default candidateAddSkillBtn">New Skill</a>
                </div>
            </div>
        </div>
    </div>
</div>

@section ProfileScripts{
    <script src="~/js/profile/userInfo/userInfo.js"></script>
    <script src="~/js/profile/userQualification/userQualification.js"></script>
    <script src="~/js/skills/skillsManager.js"></script>
    <script src="~/js/profile/profileManager.js"></script>
}